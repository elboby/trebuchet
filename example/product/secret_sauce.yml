default:
    name:                   secret_sauce
    type:                   configuration
    name_suffix:            _default

    locale:                 en_EN.UTF-8
    country:                EN

    log_folder:             /var/log/trebuchet/

    applications:
        secret_sauce:
            web:
                uwsgi_port:     8999
                url:            secret_sauce.lab

    static_files:
    -   name:       secret_sauce_pieceofconf
        folders:
            -   path:  "etc/nginx/sites-available/"
        debian_scripts:
            postinst:
                -   "echo hello"

    extra_files:
        -   name:                   secret_sauce
            type:                   product
            template:               config.ini

        -   name:                   secret_sauce_web
            type:                   nginx
            template:               templates/nginx.conf

        -   name:                   secret_sauce_custom
            type:                   custom
            template:               templates/custom.ini
            target_path:            /etc/trebuchet/custom/
            target_extension:       .cfg

    debian_scripts:
        postinst:
            -   "/etc/init.d/nginx reload"

live:
    name_suffix:            _live

    applications:
        secret_sauce:
            web:
                uwsgi_port:     8998
                url:            secret_sauce.com


# class CountrySettingsPackage(Package):
#     """
#     If updated, needs to restart all upstart services from all applications.
#     """
#     template = "config.ini"

#     def __init__(self, name, version=None):
#         super(CountrySettingsPackage, self).__init__(name, version=version)
#         # TODO: use postinst, preinst, prerm for this
#         self.settings_package.update({"use_nginx": True})

#     # def prepare(self, configuration, config_applications):
#     #     self.config = configuration
#     #     self.config_applications = config_applications
#     #     self.settings_package.update({'country': configuration})

#     def pre_build(self, extra_template_dir=None):
#         options = self.config
#         options.update({'full_name': self.name})

#         options.update(self.config_applications)

#         # add extrafiles information (maiden_name is the un-suffixed name)
#         options['extra_files'] = {}
#         for key,binary in self.extra_files.iteritems():
#             options['extra_files'][binary.unsuffixed_name] = binary.relative_filepath

#         # main config file
#         main_config = get_custom_file('product', self.name, self.template)

#         main_config.build(
#                 self.full_path,
#                 {'options': flatten_dict(options),},
#                 extra_template_dir=extra_template_dir
#             )

#     def get_service_dependencies(self):
#         if self.config_applications == []:
#             return {}
#         return list(self.config_applications.keys())
